package com.test.portlets.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.test.portlets.model.ManageOrganization;
import com.test.portlets.model.ManageOrganizationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ManageOrganization service. Represents a row in the &quot;ManageOrganization_ManageOrganization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.test.portlets.model.ManageOrganizationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ManageOrganizationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ManageOrganizationImpl
 * @see com.test.portlets.model.ManageOrganization
 * @see com.test.portlets.model.ManageOrganizationModel
 * @generated
 */
public class ManageOrganizationModelImpl extends BaseModelImpl<ManageOrganization>
    implements ManageOrganizationModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a manage organization model instance should use the {@link com.test.portlets.model.ManageOrganization} interface instead.
     */
    public static final String TABLE_NAME = "ManageOrganization_ManageOrganization";
    public static final Object[][] TABLE_COLUMNS = {
            { "sbId", Types.BIGINT },
            { "sbName", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table ManageOrganization_ManageOrganization (sbId LONG not null primary key,sbName VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table ManageOrganization_ManageOrganization";
    public static final String ORDER_BY_JPQL = " ORDER BY manageOrganization.sbId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY ManageOrganization_ManageOrganization.sbId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.test.portlets.model.ManageOrganization"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.test.portlets.model.ManageOrganization"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.test.portlets.model.ManageOrganization"));
    private static ClassLoader _classLoader = ManageOrganization.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            ManageOrganization.class
        };
    private long _sbId;
    private String _sbName;
    private ManageOrganization _escapedModel;

    public ManageOrganizationModelImpl() {
    }

    public long getPrimaryKey() {
        return _sbId;
    }

    public void setPrimaryKey(long primaryKey) {
        setSbId(primaryKey);
    }

    public Serializable getPrimaryKeyObj() {
        return new Long(_sbId);
    }

    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    public Class<?> getModelClass() {
        return ManageOrganization.class;
    }

    public String getModelClassName() {
        return ManageOrganization.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("sbId", getSbId());
        attributes.put("sbName", getSbName());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long sbId = (Long) attributes.get("sbId");

        if (sbId != null) {
            setSbId(sbId);
        }

        String sbName = (String) attributes.get("sbName");

        if (sbName != null) {
            setSbName(sbName);
        }
    }

    public long getSbId() {
        return _sbId;
    }

    public void setSbId(long sbId) {
        _sbId = sbId;
    }

    public String getSbName() {
        if (_sbName == null) {
            return StringPool.BLANK;
        } else {
            return _sbName;
        }
    }

    public void setSbName(String sbName) {
        _sbName = sbName;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            ManageOrganization.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public ManageOrganization toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (ManageOrganization) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    public ManageOrganization toUnescapedModel() {
        return (ManageOrganization) this;
    }

    @Override
    public Object clone() {
        ManageOrganizationImpl manageOrganizationImpl = new ManageOrganizationImpl();

        manageOrganizationImpl.setSbId(getSbId());
        manageOrganizationImpl.setSbName(getSbName());

        manageOrganizationImpl.resetOriginalValues();

        return manageOrganizationImpl;
    }

    public int compareTo(ManageOrganization manageOrganization) {
        int value = 0;

        if (getSbId() < manageOrganization.getSbId()) {
            value = -1;
        } else if (getSbId() > manageOrganization.getSbId()) {
            value = 1;
        } else {
            value = 0;
        }

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof ManageOrganization)) {
            return false;
        }

        ManageOrganization manageOrganization = (ManageOrganization) obj;

        long primaryKey = manageOrganization.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<ManageOrganization> toCacheModel() {
        ManageOrganizationCacheModel manageOrganizationCacheModel = new ManageOrganizationCacheModel();

        manageOrganizationCacheModel.sbId = getSbId();

        manageOrganizationCacheModel.sbName = getSbName();

        String sbName = manageOrganizationCacheModel.sbName;

        if ((sbName != null) && (sbName.length() == 0)) {
            manageOrganizationCacheModel.sbName = null;
        }

        return manageOrganizationCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(5);

        sb.append("{sbId=");
        sb.append(getSbId());
        sb.append(", sbName=");
        sb.append(getSbName());
        sb.append("}");

        return sb.toString();
    }

    public String toXmlString() {
        StringBundler sb = new StringBundler(10);

        sb.append("<model><model-name>");
        sb.append("com.test.portlets.model.ManageOrganization");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>sbId</column-name><column-value><![CDATA[");
        sb.append(getSbId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sbName</column-name><column-value><![CDATA[");
        sb.append(getSbName());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
